#include <ruby.h>

#define TRACEPOINT_CREATE_PROBES
#define TRACEPOINT_DEFINE
#include "traces.h"

<% levels = ["info", "notice", "warning", "err", "crit", "alert", "emerg"] %>
<% levels.each do |level| %>

VALUE ruby_lttng_trace_<%= level %>(VALUE self, VALUE mesg) {
   if (tracepoint_enabled(ruby_log, <%= level %>)) {
      tracepoint(ruby_log, <%= level %>, rb_sourcefile(), rb_sourceline(), StringValuePtr(mesg));
   }
   return(Qnil);
}

/*  This warrants a little more design before going further... 
VALUE ruby_lttng_trace_back_<%= level %>(VALUE self, VALUE level, VALUE mesg) {
  if (tracepoint_etabled(ruby_log, <%= level %>)) {
    loc = location_ptr(...);
    int linenum = location_lineno(loc);
    char* label = StringValuePtr(location_label_m(loc));
    char* path = StringValuePtr(location_absolute_path_m(loc));
    tracepoint(ruby_log, <%= level %>_bt, level, linenum, label, path, StringValuePtr(mesg));
  }
  return(Qnil);
}
*/

<% end %>

VALUE lttng_module;

void Init_lttng_module() {
  lttng_module = rb_define_module("LTTng");
  <% levels.each do |level| %>
      rb_define_singleton_method(lttng_module, "<%= level %>",    ruby_lttng_trace_<%= level %>, 1);
  <% end %>
}

